package com.prenda.model.obj.prenda.iface;


/** 
 * Object interface mapping for hibernate-handled table: page.
 * @author autogenerated
 */

public interface IPage {



    /**
     * Return the value associated with the column: auction.
	 * @return A Byte object (this.auction)
	 */
	Byte getAuction();
	

  
    /**  
     * Set the value related to the column: auction.
	 * @param auction the auction value you wish to set
	 */
	void setAuction(final Byte auction);

    /**
     * Return the value associated with the column: customer.
	 * @return A Byte object (this.customer)
	 */
	Byte getCustomer();
	

  
    /**  
     * Set the value related to the column: customer.
	 * @param customer the customer value you wish to set
	 */
	void setCustomer(final Byte customer);

    /**
     * Return the value associated with the column: foreclose.
	 * @return A Byte object (this.foreclose)
	 */
	Byte getForeclose();
	

  
    /**  
     * Set the value related to the column: foreclose.
	 * @param foreclose the foreclose value you wish to set
	 */
	void setForeclose(final Byte foreclose);

    /**
     * Return the value associated with the column: id.
	 * @return A Integer object (this.id)
	 */
	Integer getId();
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	void setId(final Integer id);

    /**
     * Return the value associated with the column: inventory.
	 * @return A Byte object (this.inventory)
	 */
	Byte getInventory();
	

  
    /**  
     * Set the value related to the column: inventory.
	 * @param inventory the inventory value you wish to set
	 */
	void setInventory(final Byte inventory);

    /**
     * Return the value associated with the column: outstanding.
	 * @return A Byte object (this.outstanding)
	 */
	Byte getOutstanding();
	

  
    /**  
     * Set the value related to the column: outstanding.
	 * @param outstanding the outstanding value you wish to set
	 */
	void setOutstanding(final Byte outstanding);

    /**
     * Return the value associated with the column: pawn.
	 * @return A Byte object (this.pawn)
	 */
	Byte getPawn();
	

  
    /**  
     * Set the value related to the column: pawn.
	 * @param pawn the pawn value you wish to set
	 */
	void setPawn(final Byte pawn);

    /**
     * Return the value associated with the column: pullout.
	 * @return A Byte object (this.pullout)
	 */
	Byte getPullout();
	

  
    /**  
     * Set the value related to the column: pullout.
	 * @param pullout the pullout value you wish to set
	 */
	void setPullout(final Byte pullout);

    /**
     * Return the value associated with the column: redeem.
	 * @return A Byte object (this.redeem)
	 */
	Byte getRedeem();
	

  
    /**  
     * Set the value related to the column: redeem.
	 * @param redeem the redeem value you wish to set
	 */
	void setRedeem(final Byte redeem);

    /**
     * Return the value associated with the column: user.
	 * @return A Byte object (this.user)
	 */
	Byte getUser();
	

  
    /**  
     * Set the value related to the column: user.
	 * @param user the user value you wish to set
	 */
	void setUser(final Byte user);

	// end of interface
}